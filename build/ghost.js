// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Ghost = (function() {
    Ghost.MASS = 10;

    Ghost.COLORS = [0xffb7e0, 'red', 0x00ffe4, 'orange'];

    Ghost.POSITIONS = [new THREE.Vector3(0, 10, 7.5), new THREE.Vector3(40, 40, 7.5), new THREE.Vector3(-40, -40, 7.5), new THREE.Vector3(20, -30, 7.5)];

    Ghost.RADIUS = 3;

    Ghost.VELOCITY = 20;

    function Ghost(game, ghost_index) {
      this.randomForce = bind(this.randomForce, this);
      var position;
      this.game = game;
      this.geometry = new THREE.SphereGeometry(Ghost.RADIUS);
      this.material = new THREE.MeshBasicMaterial({
        color: Ghost.COLORS[ghost_index]
      });
      this.object = new Physijs.SphereMesh(this.geometry, this.material, Ghost.MASS);
      position = Ghost.POSITIONS[ghost_index];
      this.object.position.set(position.x, position.y, position.z);
      this.object.name = 'Ghost';
      this.game.addToScene(this.object);
      this.randomForce();
    }

    Ghost.prototype.xforce = function(direction) {
      return this.object.setLinearVelocity(new THREE.Vector3(Ghost.VELOCITY * direction, 0, 0));
    };

    Ghost.prototype.yforce = function(direction) {
      return this.object.setLinearVelocity(new THREE.Vector3(0, Ghost.VELOCITY * direction, 0));
    };

    Ghost.prototype.randomForce = function() {
      var direction;
      direction = Math.random() < 0.5 ? 1 : -1;
      if (Math.random() < 0.5) {
        this.xforce(direction);
      } else {
        this.yforce(direction);
      }
      return setTimeout(this.randomForce, 500);
    };

    return Ghost;

  })();

}).call(this);
